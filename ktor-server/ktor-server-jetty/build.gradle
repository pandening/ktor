description = ''
kotlin {
    sourceSets {
        commonMain {
            dependencies {
                api project(':ktor-server:ktor-server-host-common')
                api project(':ktor-server:ktor-server-servlet')
            }
        }
        commonTest {
            dependencies {
                api project(':ktor-server:ktor-server-test-host')
                api project(':ktor-server:ktor-server-core')
            }
        }
        jvmMain {
            dependencies {
                api group: 'org.eclipse.jetty', name: 'jetty-server', version: jetty_version
                api group: 'org.eclipse.jetty', name: 'jetty-servlets', version: jetty_version
                api group: 'org.eclipse.jetty', name: 'jetty-alpn-server', version: jetty_version
                api group: 'org.eclipse.jetty', name: 'jetty-alpn-openjdk8-server', version: jetty_version
                api group: 'org.eclipse.jetty', name: 'jetty-alpn-java-server', version: jetty_version
                api group: 'org.eclipse.jetty.http2', name: 'http2-server', version: jetty_version

//                bootOnly group: 'org.mortbay.jetty.alpn', name: 'alpn-boot', version: jetty_alpn_boot_version
            }
        }
        jvmTest {
            dependencies {
                api group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jetty_version
//                api project(path: ':ktor-server:ktor-server-core', configuration: 'testOutput')
            }
        }
    }
}

//task testHttp2(type: Test, dependsOn: 'testClasses') {
//    useJUnit()
//
//    systemProperty 'enable.http2', 'true'
//    exclude("**/*StressTest*")
//
//    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
//        def bootClasspath = configurations.boot.files
//        jvmArgs(bootClasspath.collect { "-Xbootclasspath/p:${it.absolutePath}" })
//    }
//}
//
//tasks.test.dependsOn(tasks.testHttp2)
